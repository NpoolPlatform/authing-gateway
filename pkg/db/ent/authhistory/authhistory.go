// Code generated by entc, DO NOT EDIT.

package authhistory

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the authhistory type in the database.
	Label = "auth_history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldResource holds the string denoting the resource field in the database.
	FieldResource = "resource"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldAllowed holds the string denoting the allowed field in the database.
	FieldAllowed = "allowed"
	// FieldCreateAt holds the string denoting the create_at field in the database.
	FieldCreateAt = "create_at"
	// Table holds the table name of the authhistory in the database.
	Table = "auth_histories"
)

// Columns holds all SQL columns for authhistory fields.
var Columns = []string{
	FieldID,
	FieldAppID,
	FieldUserID,
	FieldResource,
	FieldMethod,
	FieldAllowed,
	FieldCreateAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateAt holds the default value on creation for the "create_at" field.
	DefaultCreateAt func() uint32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
